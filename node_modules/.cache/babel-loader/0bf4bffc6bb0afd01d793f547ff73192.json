{"ast":null,"code":"var _jsxFileName = \"/home/fmkrom/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport api from \"./Api.js\";\nimport Card from \"./Card.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    handleUserRequest();\n    handleCardsRequest();\n  }, []);\n\n  function handleUserRequest() {\n    api.getUser().then(data => {\n      const userData = new Object();\n      userData.id = data._id;\n      userData.name = data.name;\n      userData.about = data.about;\n      userData.avatar = data.avatar;\n      setUser(userData);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n\n  function handleCardsRequest() {\n    api.getCards().then(data => {\n      const cardsData = data.map(item => {\n        return {\n          id: item._id,\n          name: item.name,\n          link: item.link,\n          owner: item.owner,\n          likes: item.likes\n        };\n      });\n      setCards(cardsData);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"profile__edit-avatar-link\",\n          onClick: props.onEditAvatar,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            className: \"profile__image\",\n            alt: \"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__avatar-overlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__name-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__edit-button\",\n            type: \"button\",\n            onClick: props.onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__job\",\n          children: user.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards\",\n      children: cards.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        link: item.link,\n        name: item.name,\n        likes: item.likes,\n        onClick: props.onCardClick(item.link)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Main, \"eax2TGZdhucBe1ENpuryqARD/C4=\");\n\n_c = Main;\n;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/fmkrom/dev/mesto-react/src/components/Main.js"],"names":["useEffect","useState","api","Card","Main","props","user","setUser","cards","setCards","handleUserRequest","handleCardsRequest","getUser","then","data","userData","Object","id","_id","name","about","avatar","catch","err","console","log","getCards","cardsData","map","item","link","owner","likes","onEditAvatar","onEditProfile","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\n\nimport api from \"./Api.js\";\n\nimport Card from \"./Card.js\";\n\nfunction Main(props){\n\n    const [user, setUser] = useState([]);\n    const [cards, setCards] = useState([]);\n\n    useEffect(()=>{\n      handleUserRequest();\n      handleCardsRequest();\n    }, []);\n    \n    function handleUserRequest(){\n      api.getUser()\n      .then(data => {\n              const userData = new Object();\n              userData.id = data._id;\n              userData.name = data.name;\n              userData.about = data.about;\n              userData.avatar = data.avatar;\n              setUser(userData)\n        }\n      ).catch(err => console.log(err));\n    };\n  \n\n    function handleCardsRequest(){\n      api.getCards()\n        .then(data =>{\n           const cardsData = data.map(item=>{\n              return{\n                id: item._id,\n                name: item.name,\n                link: item.link,\n                owner: item.owner,\n                likes: item.likes\n              }\n           })\n           setCards(cardsData);\n        }).catch(err => console.log(err));\n    }\n\n    return(\n      <main className=\"main\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar\">\n                    <a href=\"#\" className=\"profile__edit-avatar-link\" onClick={props.onEditAvatar}>\n                      <img src={user.avatar} className=\"profile__image\" alt=\"Фото профиля\"/>\n                      <div className=\"profile__avatar-overlay\"></div>\n                    </a>\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__name-block\">\n                      <h1 className=\"profile__name\">{user.name}</h1>\n                      <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button>\n                    </div>\n                    <p className=\"profile__job\">{user.about}</p>\n                </div>\n                <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\n            </section>\n \n          <section className=\"cards\">\n          {\n              cards.map(item=>\n                <Card\n                  link={item.link}\n                  name={item.name}\n                  likes={item.likes}\n                  onClick={props.onCardClick(item.link)}\n                />)\n          }\n          </section>\n        </main>\n    )\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}
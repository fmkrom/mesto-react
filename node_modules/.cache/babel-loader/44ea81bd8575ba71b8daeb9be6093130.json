{"ast":null,"code":"import _classCallCheck from\"/home/fmkrom/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/fmkrom/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(settings){_classCallCheck(this,Api);this._url=settings.url;this._cohort=settings.cohort;this._token=settings.token;}//Базовый метод получения результата запроса\n_createClass(Api,[{key:\"getRes\",value:function getRes(res){if(res.ok){//console.log(`Запрос обработан успешно: ${res}`);\nreturn res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430: \".concat(res.status));}}},{key:\"getCards\",value://Методы карточек\n//1. Получить данные карточек\nfunction getCards(){return fetch(\"\".concat(this._url,\"/\").concat(this._cohort,\"/cards\"),{method:'GET',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this.getRes);}},{key:\"addCard\",value://2. Добавить карточку\nfunction addCard(name,url){return fetch(\"\".concat(this._url,\"/\").concat(this._cohort,\"/cards\"),{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:name,link:url})}).then(this.getRes);}},{key:\"setCardLikeStatus\",value://Промежуточный метод: установить лайк-статус\nfunction setCardLikeStatus(status){if(status===true){return'PUT';}else{return'DELETE';}}//Применение лайк-статуса к методу лайка карточки:\n},{key:\"likeCard\",value:function likeCard(cardId,likeStatus){return fetch(\"\".concat(this._url,\"/\").concat(this._cohort,\"/cards/likes/\").concat(cardId),{method:this.setCardLikeStatus(likeStatus),headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this.getRes);}},{key:\"deleteCard\",value://Удалить карточку\nfunction deleteCard(cardId){return fetch(\"\".concat(this._url,\"/\").concat(this._cohort,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this.getRes);}},{key:\"getUser\",value://Методы пользователя\n//Получить данные пользователя\nfunction getUser(){return fetch(\"\".concat(this._url,\"/\").concat(this._cohort,\"/users/me\"),{method:'GET',headers:{authorization:this._token}}).then(this.getRes);}},{key:\"setUser\",value://Установить новые ДП\nfunction setUser(data){return fetch(\"\".concat(this._url,\"/\").concat(this._cohort,\"/users/me\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:data.editProfileName,about:data.editProfileJob})}).then(this.getRes);}},{key:\"editAvatar\",value://Редактировать аватар\nfunction editAvatar(url){return fetch(\"\".concat(this._url,\"/\").concat(this._cohort,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:url})}).then(this.getRes);}}]);return Api;}();var apiSettings={url:\"https://mesto.nomoreparties.co/v1\",cohort:\"cohort-20\",token:\"d7e2da9f-ccdc-4136-a46f-5fb3950e2feb\"};var api=new Api(apiSettings);export default api;","map":{"version":3,"sources":["/home/fmkrom/dev/mesto-react/src/components/Api.js"],"names":["Api","settings","_url","url","_cohort","cohort","_token","token","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","getRes","name","body","JSON","stringify","link","cardId","likeStatus","setCardLikeStatus","data","editProfileName","about","editProfileJob","avatar","apiSettings","api"],"mappings":"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","sourcesContent":["class Api {\n    constructor(settings){\n        this._url = settings.url;\n        this._cohort = settings.cohort;\n        this._token = settings.token;\n    }\n\n    //Базовый метод получения результата запроса\n\n    getRes(res){\n        if (res.ok) {\n          //console.log(`Запрос обработан успешно: ${res}`);\n          return res.json();\n        } else {\n          return Promise.reject(`Ошибка получения данных с сервера: ${res.status}`);\n        }\n    };\n    \n    //Методы карточек\n\n    //1. Получить данные карточек\n    getCards(){\n      return fetch(`${this._url}/${this._cohort}/cards`,\n      {\n       method: 'GET',\n       headers: {\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          },\n      }).then(this.getRes);\n    };\n\n    //2. Добавить карточку\n    addCard(name, url){\n      return fetch(`${this._url}/${this._cohort}/cards`,\n        {\n        method: 'POST',\n        headers:{\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          }, \n          body:JSON.stringify({\n              name: name,\n              link: url\n          })\n        }\n      ).then(this.getRes);\n    };\n\n    //Промежуточный метод: установить лайк-статус\n    setCardLikeStatus(status){\n        if (status === true){\n          return 'PUT'\n        } else {\n          return 'DELETE'\n        }\n    }\n\n    //Применение лайк-статуса к методу лайка карточки:\n    likeCard(cardId, likeStatus){\n      return fetch(`${this._url}/${this._cohort}/cards/likes/${cardId}`,\n        {\n          method: this.setCardLikeStatus(likeStatus),\n          headers:{\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          },\n        }\n      ).then(this.getRes);\n    };\n\n    //Удалить карточку\n    deleteCard(cardId){\n      return fetch(`${this._url}/${this._cohort}/cards/${cardId}`,\n        {\n          method: \"DELETE\",\n          headers:{\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          }\n        }\n      ).then(this.getRes);\n    };\n\n    //Методы пользователя\n\n    //Получить данные пользователя\n    getUser(){\n      return fetch(`${this._url}/${this._cohort}/users/me`,\n        {\n          method: 'GET',\n          headers: {\n            authorization: this._token\n          }\n        }\n      ).then(this.getRes)\n    };\n    \n    //Установить новые ДП\n    setUser(data){\n      return fetch(`${this._url}/${this._cohort}/users/me`,\n        {\n          method: 'PATCH',\n          headers: {\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          }, \n          body: JSON.stringify({\n            name: data.editProfileName,\n            about: data.editProfileJob\n          })\n      }).then(this.getRes)\n    };\n\n    //Редактировать аватар\n    editAvatar(url){\n      return fetch(`${this._url}/${this._cohort}/users/me/avatar`,\n      {\n        method: 'PATCH',\n        headers: {\n          authorization: this._token,\n          'Content-Type': 'application/json'\n        }, \n        body: JSON.stringify({\n          avatar: url\n        })\n      }\n      ).then(this.getRes)\n    };\n}\n\nconst apiSettings = {\n  url: \"https://mesto.nomoreparties.co/v1\",\n  cohort: \"cohort-20\",\n  token: \"d7e2da9f-ccdc-4136-a46f-5fb3950e2feb\"\n};    \n\nconst api = new Api (apiSettings);\n\nexport default api;\n\n\n"]},"metadata":{},"sourceType":"module"}